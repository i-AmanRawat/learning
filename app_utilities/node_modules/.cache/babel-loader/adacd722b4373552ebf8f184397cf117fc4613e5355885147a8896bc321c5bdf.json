{"ast":null,"code":"var _jsxFileName = \"/Users/amanrawat/Desktop/Mycode/Front_END/learningreact/app_utilities/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport { clear } from \"@testing-library/user-event/dist/clear\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"\");\n  //   text = \"new text\";     wrong way to change the text\n  //   setText(\"new text\");   correct way to change the text\n  const [show, setShow] = useState(false);\n  const UpCase = () => {\n    const newText = text.toUpperCase();\n    setText(newText);\n  };\n  const LoCase = () => {\n    const newText = text.toLowerCase();\n    setText(newText);\n  };\n  const Clear = () => {\n    const newText = \"\";\n    setText(newText);\n  };\n  const Capitalize = () => {\n    const newText = text.split(\" \").map(el => {\n      return el[0].toUpperCase + el.slice(1);\n    }).join(\" \");\n    console.log(newText);\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    // console.log(\"handling onchange\");\n    setText(event.target.value); //this way we are constantly udating the text variable as soon as the use is enter text in the textBox\n  };\n\n  const showPreview = () => {\n    setShow(!show);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter Text Here\",\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"textBox\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: UpCase,\n        className: \"btn btn-primary mx-1\",\n        children: \"Upper Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: LoCase,\n        className: \"btn btn-primary mx-1\",\n        children: \"Lower Case\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Capitalize,\n        className: \"btn btn-primary mx-1\",\n        children: \"Capitalisation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: Clear,\n        className: \"btn btn-primary mx-1\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * 60 * text.split(\" \").length, \" Second read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), show ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        id: \"preview\",\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: showPreview,\n        children: \"Show Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"KkcQylf4jNlXQ1ym/KxBY6Qp4WE=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["clear","React","useState","TextForm","props","text","setText","show","setShow","UpCase","newText","toUpperCase","LoCase","toLowerCase","Clear","Capitalize","split","map","el","slice","join","console","log","handleOnChange","event","target","value","showPreview","heading","length"],"sources":["/Users/amanrawat/Desktop/Mycode/Front_END/learningreact/app_utilities/src/components/TextForm.js"],"sourcesContent":["import { clear } from \"@testing-library/user-event/dist/clear\";\nimport React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\");\n  //   text = \"new text\";     wrong way to change the text\n  //   setText(\"new text\");   correct way to change the text\n  const [show, setShow] = useState(false);\n\n  const UpCase = () => {\n    const newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const LoCase = () => {\n    const newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const Clear = () => {\n    const newText = \"\";\n    setText(newText);\n  };\n\n  const Capitalize = () => {\n    const newText = text\n      .split(\" \")\n      .map((el) => {\n        return el[0].toUpperCase + el.slice(1);\n      })\n      .join(\" \");\n    console.log(newText);\n    setText(newText);\n  };\n\n  const handleOnChange = (event) => {\n    // console.log(\"handling onchange\");\n    setText(event.target.value); //this way we are constantly udating the text variable as soon as the use is enter text in the textBox\n  };\n\n  const showPreview = () => {\n    setShow(!show);\n  };\n\n  return (\n    <>\n      <div className=\"container my-5\">\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3 \">\n          <textarea\n            placeholder=\"Enter Text Here\"\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            id=\"textBox\"\n            rows=\"10\"\n          ></textarea>\n        </div>\n\n        <button type=\"button\" onClick={UpCase} className=\"btn btn-primary mx-1\">\n          Upper Case\n        </button>\n\n        <button type=\"button\" onClick={LoCase} className=\"btn btn-primary mx-1\">\n          Lower Case\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={Capitalize}\n          className=\"btn btn-primary mx-1\"\n        >\n          Capitalisation\n        </button>\n\n        <button type=\"button\" onClick={Clear} className=\"btn btn-primary mx-1\">\n          Clear\n        </button>\n      </div>\n      <div className=\"container my-3\">\n        <h2>Your text summary</h2>\n        <p>\n          {text.split(\" \").length} words and {text.length} characters\n        </p>\n        <p>{0.008 * 60 * text.split(\" \").length} Second read</p>\n        <h2>Preview</h2>\n        {show ? (\n          <p className=\"\" id=\"preview\">\n            {text}\n          </p>\n        ) : null}\n\n        <button className=\"btn btn-primary\" onClick={showPreview}>\n          Show Preview\n        </button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}